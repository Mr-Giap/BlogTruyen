@model BlogTruyen_ValueObjects.Ochapters

@{
    ViewBag.Title = "Sửa chương";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var liststory = ViewBag.listpost;
}
@section script{
    <script>
            $("#btnchonanh").on('click', function (e) {
                e.preventDefault();
                var finder = new CKFinder();
                finder.selectActionFunction = function (url) {
                    $('#Avatar').val(url);
                };
                finder.popup();
            });

        var editor = CKEDITOR.replace('txtcontent', {
                customConfig: '/Areas/Admin/Content/plugins/ckeditor/config.js',
            });
    </script>
}

<h2 class="text-center">Sửa chương</h2>

@using (Html.BeginForm("Update","Chapter",FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-10">
                @Html.EditorFor(model => model.IdChapter, new { htmlAttributes = new { @class = "form-control hidden" } })
                @Html.ValidationMessageFor(model => model.IdChapter, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdPost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IdPost, (IEnumerable<SelectListItem>)liststory, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IdPost, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdPost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    var number = int.Parse((@Model.NameChap).ToString());
                    @Html.EditorFor(model => model.IdChapter, new { htmlAttributes = new { @class = "form-control hidden" } })
                    <input type="text" class="form-control" value="Chương @number" />
                }

                @Html.ValidationMessageFor(model => model.NameChap, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ChapContent, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.ChapContent, new { htmlAttributes = new { @class = "form-control" },@id = "txtcontent" })
                @Html.ValidationMessageFor(model => model.ChapContent, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateCreate, new { htmlAttributes = new { @class = "form-control hidden" } })
                @Html.ValidationMessageFor(model => model.DateCreate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsDelete, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsDelete)
                    @Html.ValidationMessageFor(model => model.IsDelete, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <a href="@Url.Action("Index","Chapter")" class="btn btn-default">Trở lại danh sách</a>
                <input type="submit" value="Lưu" class="btn btn-default" />
            </div>
        </div>
    </div>
}
